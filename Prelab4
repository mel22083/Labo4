/*
 * Nombrelabo4.c
 *
 * Created: 
 * Author: Willi
 * Description: 
 */
/****************************************/
// Encabezado (Libraries)
#define F_CPU 16000000UL

#include <avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>

volatile uint8_t valorADC = 0;
volatile uint8_t contador = 0;
volatile uint64_t TimerMillis = 0;

volatile uint8_t Presionado1 = 0;
volatile uint8_t Presionado2 = 0;
/****************************************/
// Function prototypes
void setup();
void initADC();
void Timer1_Init();
/****************************************/
// Main Function

int main(void)
{
	setup();
	Timer1_Init();
	//initADC();
	while (1)
	{
	
		PORTB = (1 << PB5);
		PORTD = contador;
		_delay_ms(5);  
	}
}

/****************************************/
// NON-Interrupt subroutines
void setup()
{
	
	cli ();
	 
	 UCSR0B = 0x00;
	 DDRD = 0xFF;
	 
	 DDRB = 0xFF;                   
	 
	 DDRC &= ~((1 << PC0) | (1 << PC1));   
	 PORTC |= (1 << PC0) | (1 << PC1);
	 
	 PCICR |= (1 << PCIE1);           
	 PCMSK1 |= (1 << PCINT8) | (1 << PCINT9);
	 
	sei();

}

void Timer1_Init(void)
{
	
	TCCR1B |= (1 << WGM12);					
	OCR1A = 249; 							
	TCCR1B |= (1 << CS11) | (1 << CS10);	
	TIMSK1 |= (1 << OCIE1A);				
}

ISR(TIMER1_COMPA_vect)
{
	TimerMillis++;
}

ISR(PCINT1_vect)
{
	
	if (!(PINC & (1 << PC1))) 
	{ 
		if (TimerMillis > 150) 
		{
		contador++;  
		TimerMillis = 0;
		}
	}
	
	if (!(PINC & (1 << PC0))) 
	{ 
		if (TimerMillis > 150)
		{
			contador--; 
			TimerMillis = 0;
		}
	}
	
}


void initADC()
{
	ADMUX = 0;
	ADMUX |= (1 << REFS0) | (1 << ADLAR)| (1 << MUX2) | (1 << MUX1);
	
	ADCSRA = 0;
	ADCSRA |= (1 << ADPS1) | (1 << ADPS0) | (1 << ADIE) | (1 << ADEN) | (1 << ADSC);
}
/****************************************/
// Interrupt routines
ISR(ADC_vect)
{
	PORTD = ADCH;
	ADCSRA |= (1 << ADSC);
}
